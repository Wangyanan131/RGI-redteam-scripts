#!/bin/bash
# Written by Chip McElvain 168COS
# Builds interfaces, designed for ubuntu 18.04 using ifupdown verse netplan
# Script requires /root/scripts/IPList.txt config file.

# Clears terminal for output messages
clear

# Set variable names to add color codes to menu displays.
white="\e[1;37m"
ltblue="\e[1;36m"
ltgray="\e[0;37m"
red="\e[1;31m"
green="\e[1;32m"
whiteonblue="\e[5;37;44m"
yellow="\e[1;33m"
default="\e[0m"

# Set location to the config file
IPfile="/root/scripts/IPList.txt"

# checks to make sure IPList.txt exists.
if [ ! -s $IPfile ]
then
  echo -e "\n\t\t$red ####  ERROR  ####"
  echo -e "\t$white There isn't a config file to use.  For this script to work"
  echo -e "\t the following file needs to exist ($ltblue/root/scripts/IPList.txt$white)"
  echo -e "\t This file is automatically generated by the buildredteam.sh script"
  echo -e "\t Alternatively you can manually create it, below is the syntax required"
  echo -e "\t\t Syntax:  IP/CIDR,gatewayIP"
  echo -e "\t\t $ltblue EX."
  echo -e "\t\t 23.45.67.89/22,23.45.64.1"
  echo -e "\t\t 33.44.33.22/24,33.44.33.1"
  echo -e "\t\t 12.33.44.33/25,12.33.44.1\n$default"
  exit 1
fi

echo -en "\n\t$ltgray Resetting IP's now ..."
# Configuration file is built, now we process through it to create
# a new interface config file.  This file will get moved to /etc/network/interfaces
intfile="/tmp/int.tmp"

# disables IPv6
sysctl net.ipv6.conf.all.disable_ipv6=1 1>/dev/null

# Gets the name of the interface
intname=`ip link | awk -F: '$0 !~ "lo|vir|wl|^[^0-9]"{print $2;getline}'`

# deletes interface configuration and clears the routing table
ip addr flush $intname && ip route flush table main

# Sets default DNS to the recursive DNS server IP on the RGI
dnssrv="17.72.153.88"

# Initializes the new interfaces file 
echo "# Interface file generated by buildredirector.sh " > $intfile
echo "auto lo" >> $intfile
echo -e "iface lo inet loopback\n" >> $intfile

# set loop variables.
pass=0

# Loops through the config file to create netplan yaml file
while read p
do
  if [[ $p == \#* ]] || [[ $p == "" ]]; then continue; fi
  if [[ $pass -eq 0 ]]
  then intnamein=$intname
  else intnamein=$intname:$pass
  fi  
  addrin=`echo $p | cut -d, -f1`
  gwyip=`echo $p | cut -d, -f2`
  echo "auto $intnamein" >> $intfile
  echo "iface $intnamein inet static" >> $intfile
  echo "  address $addrin" >> $intfile
  if [[ $pass -eq 0 ]]
  then
    echo "  gateway $gwyip" >> $intfile
    echo "  dns-nameservers $dnssrv" >> $intfile
  fi
  let "pass++"
done<$IPfile

# replace interfaces file with newly created one
mv $intfile /etc/network/interfaces

# Restart networking services to read in new interface config
service networking restart
echo -e "\t$green  Finished!$default\n"
